spaces = ( " " | "\t" ) + ;

line-separator = "\n\r" | "\n" | "\r" ; 

punctuation-marks = "[" | "]" | """ | "-" | "." | ";" | "#" ;

start-of-comment = "#" | ";" ;

line-continuation = "\" line-separator ;

letter-english-large = [A-Z] ;

letter-english-small = [a-z] ;

letter-english = letter-english-large | letter-english-small ;

special-sequence = "\\""" | "\\\\" | "\\\n" | "\\t" | "\\b" ;

united-line-separator = ( spaces ? line-separator spaces ? ) + ;

symbol = allowed-symbol | non-allowed-symbol;

allowed-symbol = letter-russian | letter-english | digit | punctuation-marks | spaces ;

comment = start-of-comment text-of-comment * ;

text-of-comment = . ;

separator = spaces | united-line-separator | comment ;

section = section-header separator * section-body ;

section-body = (variable separator *) * | (subsection separator *) * ;

section = ( subsection separator * ) * ;

section-header = "[" spaces * section-title spaces* "]" ;

section-title = ( letter | "-" | "." ) + ;

subsection = subsection-header separator * subsection-body ;

section-header = "[" spaces * section-title spaces * """ subsection-header """ spaces * "]" ;

subsection-body = ( variable separator * ) * ;

variable = variable-name ( separator * "=" separator * variable-value ) ?
             || "include.path" separator * "=" separator* file-path
;

subsection-header = ( "\\\"" | "\\\\" | allowed-symbol | spaces ) + ;

variable-name = letter-english ( letter-english | "-" ) * ;

variable-value = quoted-string-with-continuations | unquoted-string-in-the-wild ;

quoted-string-with-continuations = "\"" ( allowed-symbol | spaces | special-sequence | line-continuation ) * "\"" ;

unquoted-string-in-the-wild = ( ( allowed-symbol | special-sequence ) *
     spaces | line-continuation ) * ( allowed-symbol | special-sequence ) separator ? ;

quoted-string = """ ( allowed-symbol | spaces | special-sequence ) * """ ;

file-content = separator ? ( section separator * ) * separator ? ;
