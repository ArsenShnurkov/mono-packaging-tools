file_content := { [ws] , section , [ws] } ;

section := [ section_header ] , [ws] , section_body ;

section_header := lbracket, [sp] , sectiontitle, [sp] , rbracket ;

section_title := sectiontitleunit;

sectiontitleunit := letter_english | minus | "." ;

section_body := [ list_of_body_units ] , { [ws] , subsection , [ws] };

subsection := subsection_header, [ [ws] , list_of_body_units ] ;

list_of_body_units := { [ws] , variable_line , [ws] } ;

subsection_header := lbracket , [sp], section_title , [sp] , dquote , subsection_title , dquote , [sp] , rbracket ;

variable_line := variable_name | variable_assignment_long | special_include_syntax 
	| malformed_line
	;


variable_name := letter_english, { { ( letter_english | digit | minus | "." ) } , ( letter_english | digit ) } ;

variable_assignment_long := variablename, ws , "=", ws , variable_value ;

variable_value := dquoted_string | unquoted_string ;

quoted_string := dquote, {quoted_string_unit} , dquote ;

quoted_string_unit := quoted_string_unit_raw | specialsequence |
	( linecontinuation, line_separator );

quoted_string_unit_raw := {ac} - ( dquote | specialsequence | linecontinuation | line_separator );

unquoted_string := { unquoted_string_unit } ;

unquoted_string_unit := { unquoted_string_unit_raw | ( linecontinuation , line_separator ) };

unquoted_string_unit_raw := {ac} - ( dquote | linecontinuation | line_separator | comment );

special_include_syntax := "include.path" ,  [ ws ] ,  "=" ,  [ ws ] ,  filepath ;

filepath := variable_value;

backslash := '\' ;
dquote := '"' ;

seq := ( backslash , dquote ) 
	| ( backslash, backslash )
	| ( backslash , 'n' )
	| ( backslash , 't' )
	| ( backslash, 'b' )
	;

line_continuation := backslash | line_separator ;
slb = linecontinuation , line_separator ;

line_separator := line_separator_raw | ( comment , line_separator_raw ) ;

comment_start := '#' | ';' ;
comment_unit := ( {ac} - slb );
comment := comment_start , { comment_unit | slb } ;

space := { ' ' | '\t' } ;
sp := {space | slb };

ls := { line_separator | [sp] } ;

ws := { sp | line_separator } ;

letter_english_large := "A"|"B"|"C"|"D"|"E"|"F"|"G"|"H"|"I"|"J"|"K"|"L"|"M"|"N"|"O"|"P"|"Q"|"R"|"S"|"T"|"U"|"V"|"W"|"X"|"Y"|"Z" ;

letter_english_small := "a"|"b"|"c"|"d"|"e"|"f"|"g"|"h"|"i"|"j"|"k"|"l"|"m"|"n"|"o"|"p"|"q"|"r"|"s"|"t"|"u"|"v"|"w"|"x"|"y"|"z" ;

letter_russian_large := "А"|"Б"|"В"|"Г"|"Д"|"Е"|"Ё"|"Ж"|"З"|"И"|"Й"|"К"|"Л"|"М"|"Н"|"О"|"П"|"Р"|"С"|"Т"|"У"|"Ф"|"Х"|"Ц"|"Ч"|"Ш"|"Щ"|"Ъ"|"Ы"|"Ь"|"Э"|"Ю"|"Я" ;

letter_russian_small := "а"|"б"|"в"|"г"|"д"|"е"|"ё"|"ж"|"з"|"и"|"й"|"к"|"л"|"м"|"н"|"о"|"п"|"р"|"с"|"т"|"у"|"ф"|"х"|"ц"|"ч"|"ш"|"щ"|"ъ"|"ы"|"ь"|"э"|"ю"|"я" ;

letter_english := letter_english_large | letter_english_small ;

letter_russian := letter_russian_large | letter_russian_small ;

letter := letter_english | letter_russian;

digit := "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;

minus :=  "-" ;

lbracket := '[' ;

rbracket := ']' ;



(* "malformed_line" should eat all characters to the end of line *)
malformed_line := { malformed_line_unit } ; 


(* malformed_line_unit := ( ac - ( '\n' | '\r' ) ) | ( (ac , ac) - ( '\n' , '\r'  ) ) ; *)

malformed_line_unit := ? Terminals.AnyChar ? - '\n' ;

line_separator_raw := '\n\r' | '\n' | '\r' | ? Terminals.Eol ? ;

ac := ? Terminals.AnyChar ? ;
