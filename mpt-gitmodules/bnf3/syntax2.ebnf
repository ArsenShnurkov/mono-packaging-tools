space_or_tab := ( space | tab ) ;
line_separator_raw := cr | lf | ( cr, lf ) ;
comment_start := '#' | ';' ;
line_continuation := backslash ;
(* Below it is not a *sequence* of backslash and eol, they are 2 *alternatives* *)
comment_unit := ( ac - ( line_separator_raw | line_continuation ) ) ;
(* line separator can't exist at the end of file without line separator *)
comment_unit_2 := comment_unit | ( line_continuation , line_separator_raw) ;
(* there may be no line separator at the end of file *)
comment := comment_start , { comment_unit_2 } ;
space_from_line_continuation := line_continuation , line_separator_raw ;
(* whitespace without linebreaks *)
sp := space_or_tab, {space_or_tab} ;
(* spaces with mandatory line feed *)
sp_with_linebreak_raw := line_separator_raw | comment ;
(* Any whitespace *)
ws_unit := space_or_tab | sp_with_linebreak_raw;
ws := ws_unit | {ws_unit} ;




file_content := { [ws], section }, [ws];
section := [ [ws], section_header ] , [ [ws], section_body];
section_header := "_section_" ;
section_body := [ list_of_body_units ] , [[ws], list_of_subsections];
variable_line :=  "_variable_";
list_of_body_units := variable_line, { ( [ws], variable_line ) } ;
list_of_subsections := subsection, { [ws], subsection } ;
subsection := subsection_header, [ [ws], list_of_body_units ] ;
subsection_header := "_subsection_";


ac := ? Terminals.AnyChar ? ;
eol := ? Terminals.Eol ? ;
space := " " ;
tab := "\x0009" ;
lf := "\x000A" ;
cr := "\x000D" ;
backslash := "\x005C" ;
dquote := '\x0022' ;
